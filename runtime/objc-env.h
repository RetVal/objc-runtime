// -*- truncate-lines: t; -*-

// OPTION(var, default, env, help)
// or, for internal-only options, INTERNAL_OPTION(var, env, help)

OPTION( PrintImages,                               Off, OBJC_PRINT_IMAGES,               "log image and library names as they are loaded")
OPTION( PrintLoading,                              Off, OBJC_PRINT_LOAD_METHODS,         "log calls to class and category +load methods")
OPTION( PrintInitializing,                         Off, OBJC_PRINT_INITIALIZE_METHODS,   "log calls to class +initialize methods")
OPTION( PrintResolving,                            Off, OBJC_PRINT_RESOLVED_METHODS,     "log methods created by +resolveClassMethod: and +resolveInstanceMethod:")
OPTION( PrintConnecting,                           Off, OBJC_PRINT_CLASS_SETUP,          "log progress of class and category setup")
OPTION( PrintProtocols,                            Off, OBJC_PRINT_PROTOCOL_SETUP,       "log progress of protocol setup")
OPTION( PrintIvars,                                Off, OBJC_PRINT_IVAR_SETUP,           "log processing of non-fragile ivars")
OPTION( PrintVtables,                              Off, OBJC_PRINT_VTABLE_SETUP,         "log processing of class vtables")
OPTION( PrintVtableImages,                         Off, OBJC_PRINT_VTABLE_IMAGES,        "print vtable images showing overridden methods")
OPTION( PrintCaches,                               Off, OBJC_PRINT_CACHE_SETUP,          "log processing of method caches")
OPTION( PrintFuture,                               Off, OBJC_PRINT_FUTURE_CLASSES,       "log use of future classes for toll-free bridging")
OPTION( PrintPreopt,                               Off, OBJC_PRINT_PREOPTIMIZATION,      "log preoptimization courtesy of dyld shared cache")
OPTION( PrintCxxCtors,                             Off, OBJC_PRINT_CXX_CTORS,            "log calls to C++ ctors and dtors for instance variables")
OPTION( PrintExceptions,                           Off, OBJC_PRINT_EXCEPTIONS,           "log exception handling")
OPTION( PrintExceptionThrow,                       Off, OBJC_PRINT_EXCEPTION_THROW,      "log backtrace of every objc_exception_throw()")
OPTION( PrintAltHandlers,                          Off, OBJC_PRINT_ALT_HANDLERS,         "log processing of exception alt handlers")
OPTION( PrintReplacedMethods,                      Off, OBJC_PRINT_REPLACED_METHODS,     "log methods replaced by category implementations")
OPTION( PrintDeprecation,                          Off, OBJC_PRINT_DEPRECATION_WARNINGS, "warn about calls to deprecated runtime functions")
OPTION( PrintPoolHiwat,                            Off, OBJC_PRINT_POOL_HIGHWATER,       "log high-water marks for autorelease pools")
OPTION( PrintCustomCore,                           Off, OBJC_PRINT_CUSTOM_CORE,          "log classes with custom core methods")
OPTION( PrintCustomRR,                             Off, OBJC_PRINT_CUSTOM_RR,            "log classes with custom retain/release methods")
OPTION( PrintCustomAWZ,                            Off, OBJC_PRINT_CUSTOM_AWZ,           "log classes with custom allocWithZone methods")
OPTION( PrintRawIsa,                               Off, OBJC_PRINT_RAW_ISA,              "log classes that require raw pointer isa fields")

OPTION( DebugUnload,                               Off, OBJC_DEBUG_UNLOAD,               "warn about poorly-behaving bundles when unloaded")
OPTION( DebugFragileSuperclasses,                  Off, OBJC_DEBUG_FRAGILE_SUPERCLASSES, "warn about subclasses that may have been broken by subsequent changes to superclasses")
OPTION( DebugNilSync,                              Off, OBJC_DEBUG_NIL_SYNC,             "warn about @synchronized(nil), which does no synchronization")
OPTION( DebugSyncErrors,                           Off, OBJC_DEBUG_SYNC_ERRORS,          "warn when objc_sync_enter or objc_sync_exit return an error")
OPTION( DebugNonFragileIvars,                      Off, OBJC_DEBUG_NONFRAGILE_IVARS,     "capriciously rearrange non-fragile ivars")
OPTION( DebugAltHandlers,                          Off, OBJC_DEBUG_ALT_HANDLERS,         "record more info about bad alt handler use")
OPTION( DebugMissingPools,                         Off, OBJC_DEBUG_MISSING_POOLS,        "warn about autorelease with no pool in place, which may be a leak")
OPTION( DebugPoolAllocation,                       Off, OBJC_DEBUG_POOL_ALLOCATION,      "halt when autorelease pools are popped out of order, and allow heap debuggers to track autorelease pools")
OPTION( DebugDuplicateClasses,                     On,  OBJC_DEBUG_DUPLICATE_CLASSES,    "warn when multiple classes with the same name are present")
OPTION( DebugDontCrash,                            Off, OBJC_DEBUG_DONT_CRASH,           "halt the process by exiting instead of crashing")
OPTION( DebugPoolDepth,                            Off, OBJC_DEBUG_POOL_DEPTH,           "log fault when at least a set number of autorelease pages has been allocated")
OPTION( DebugScribbleCaches,                       Off, OBJC_DEBUG_SCRIBBLE_CACHES,      "scribble the IMPs in freed method caches")
OPTION( DebugScanWeakTables,                       Off, OBJC_DEBUG_SCAN_WEAK_TABLES,     "scan the weak references table continuously in the background - set OBJC_DEBUG_SCAN_WEAK_TABLES_INTERVAL_NANOSECONDS to set scanning interval (default 1000000)")
OPTION( DebugWeakErrors,                           On,  OBJC_DEBUG_WEAK_ERRORS,           "warn about misuse of objc_storeWeak/objc_loadWeak")
OPTION( DisableVtables,                            Off, OBJC_DISABLE_VTABLES,            "disable vtable dispatch")
OPTION( DisablePreopt,                             Off, OBJC_DISABLE_PREOPTIMIZATION,    "disable preoptimization courtesy of dyld shared cache")
OPTION( DisablePreattachedCategories,              Off, OBJC_DISABLE_PREATTACHED_CATEGORIES, "disable preattached categories in the dyld shared cache")
OPTION( DisableTaggedPointers,                     Off, OBJC_DISABLE_TAGGED_POINTERS,    "disable tagged pointer optimization of NSNumber et al.")
OPTION( DisableTaggedPointerObfuscation,           Off, OBJC_DISABLE_TAG_OBFUSCATION,    "disable obfuscation of tagged pointers")
OPTION( DisableNonpointerIsa,                      Off, OBJC_DISABLE_NONPOINTER_ISA,     "disable non-pointer isa fields")
OPTION( DisableInitializeForkSafety,               Off, OBJC_DISABLE_INITIALIZE_FORK_SAFETY, "disable safety checks for +initialize after fork")
OPTION( DisableFaults,                             Off, OBJC_DISABLE_FAULTS,             "disable os faults")
OPTION( DisablePreoptCaches,                       Off, OBJC_DISABLE_PREOPTIMIZED_CACHES, "disable preoptimized caches")
OPTION( DisableAutoreleaseCoalescing,              Off, OBJC_DISABLE_AUTORELEASE_COALESCING, "disable coalescing of autorelease pool pointers")
OPTION( DisableAutoreleaseCoalescingLRU,           Off, OBJC_DISABLE_AUTORELEASE_COALESCING_LRU, "disable coalescing of autorelease pool pointers using look back N strategy")

INTERNAL_OPTION( DisableClassRXSigningEnforcement, Off, OBJC_DISABLE_CLASSRX_SIGNING_ENFORCEMENT, "disable class_rx_t pointer signing enforcement")
INTERNAL_OPTION( DebugClassRXSigning,              Off, OBJC_DEBUG_CLASS_RX_SIGNING,     "warn about class_rx_t pointer signing mismatches")
INTERNAL_OPTION( DisableClassROFaults,             Off, OBJC_DISABLE_CLASS_RO_FAULTS,    "disable os faults for class_ro_t pointer signing mismatches")
